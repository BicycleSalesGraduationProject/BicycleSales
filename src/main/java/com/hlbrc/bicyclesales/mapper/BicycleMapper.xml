<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.bicyclesales.mapper.IBicycleMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.bicyclesales.entity.Bicycle">
    <id column="bicycleId" jdbcType="INTEGER" property="bicycleid" />
    <result column="bicycleTypeId" jdbcType="INTEGER" property="bicycletypeid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="delstate" jdbcType="VARCHAR" property="delstate" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bicycleId, bicycleTypeId, name, money, inventory, delstate, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.bicyclesales.entity.BicycleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bicycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageIndex != null and pageSize != null and pageSize != 0">
          limit #{pageIndex},#{pageSize}
      </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bicycle
    where bicycleId = #{bicycleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bicycle
    where bicycleId = #{bicycleid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.bicyclesales.entity.BicycleExample">
    delete from bicycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.bicyclesales.entity.Bicycle">
    insert into bicycle (bicycleId, bicycleTypeId, name, 
      money, inventory, delstate, 
      createTime, updateTime)
    values (#{bicycleid,jdbcType=INTEGER}, #{bicycletypeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{inventory,jdbcType=INTEGER}, #{delstate,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.bicyclesales.entity.Bicycle">
    insert into bicycle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bicycleid != null">
        bicycleId,
      </if>
      <if test="bicycletypeid != null">
        bicycleTypeId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="delstate != null">
        delstate,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bicycleid != null">
        #{bicycleid,jdbcType=INTEGER},
      </if>
      <if test="bicycletypeid != null">
        #{bicycletypeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="delstate != null">
        #{delstate,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.bicyclesales.entity.BicycleExample" resultType="java.lang.Long">
    select count(*) from bicycle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bicycle
    <set>
      <if test="record.bicycleid != null">
        bicycleId = #{record.bicycleid,jdbcType=INTEGER},
      </if>
      <if test="record.bicycletypeid != null">
        bicycleTypeId = #{record.bicycletypeid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.delstate != null">
        delstate = #{record.delstate,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bicycle
    set bicycleId = #{record.bicycleid,jdbcType=INTEGER},
      bicycleTypeId = #{record.bicycletypeid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      inventory = #{record.inventory,jdbcType=INTEGER},
      delstate = #{record.delstate,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.bicyclesales.entity.Bicycle">
    update bicycle
    <set>
      <if test="bicycletypeid != null">
        bicycleTypeId = #{bicycletypeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="delstate != null">
        delstate = #{delstate,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bicycleId = #{bicycleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.bicyclesales.entity.Bicycle">
    update bicycle
    set bicycleTypeId = #{bicycletypeid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      inventory = #{inventory,jdbcType=INTEGER},
      delstate = #{delstate,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where bicycleId = #{bicycleid,jdbcType=INTEGER}
  </update>
</mapper>